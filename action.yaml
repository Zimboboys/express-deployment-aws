name: 'Express Deployment AWS'
description: 'Automatically deploy an Express app to API Gateway/Lambda'

inputs:
  s3-bucket:
    description: 's3 bucket to store builds'
    required: true

  # Region may be removable. Provided by aws-actions/configure-aws-credentials@v1?
  region:
    description: 'Region to deploy to'
    required: true
    default: 'us-east-1'
  stack-name:
    description: 'Cloud Formation stack name'
    required: true
  domain:
    description: 'Domain to deploy to'
    required: false
    default: ''

outputs:
  api-url:
    description: 'URL of the API'
    value: ${{ steps.get-url.outputs.api-url }}

runs:
  using: "composite"
  steps:
    - name: Install backend dependencies
      working-directory: backend
      run: npm install --production
      shell: bash

    - name: Compile backend
      run: |
        cp ${{ github.action_path }}/lambda.js .
        cp ${{ github.action_path }}/webpack.config.js .
        npm install webpack webpack-cli source-map-support dotenv-webpack @vendia/serverless-express
        npx webpack-cli
      shell: bash

      # TODO: create bucket if non-existant

      # TODO: check if region can be removed
    - name: Package backend
      run: aws cloudformation package --template ./sam-template.yaml --s3-bucket ${{ inputs.s3-bucket }} --output-template sam-template.packaged.yaml --region ${{ inputs.region }}
      shell: bash

      # TODO: test domain
    - name: Deploy backend
      run: aws cloudformation deploy --template-file sam-template.packaged.yaml --stack-name ${{ inputs.stack-name }} --capabilities CAPABILITY_IAM --region ${{ inputs.region }} --parameter-overrides DomainName=${{ inputs.domain }}
      shell: bash

    - name: Upload file
      run: aws s3 sync ./dist s3://${{ inputs.s3-bucket }}
      shell: bash

    - id: get-url
      run: echo "::set-output name=api-url::$(echo example.com)"
      shell: bash
